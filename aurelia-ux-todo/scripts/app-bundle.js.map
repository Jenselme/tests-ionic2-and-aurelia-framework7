{"version":3,"sources":["routes.ts","app.ts","environment.ts","home.ts","main.ts","resources/index.ts","pages/todo.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["let todoCategory = {\n    title: 'TODO',\n};\n\n\nexport let routes = [\n    { route: '', redirect: 'home' },\n    { route: 'home', moduleId: './home', name: 'home', title: 'Home' },\n\n    { settings: { category: todoCategory }, route: 'todo', moduleId: './pages/todo', name: 'todo', title: 'Add todo', nav: true },\n];\n","import { AureliaUX } from 'aurelia-ux';\nimport { inject } from 'aurelia-dependency-injection';\nimport { routes } from './routes';\n\n\n@inject(AureliaUX)\nexport class App {\n    router;\n    showNavigationMenu: Boolean;\n\n    constructor(ux) {\n        ux.design.primary = '#009688';\n        ux.design.accent = '#4CAF50';\n\n        this.showNavigationMenu = false;\n    }\n\n    configureRouter(config, router) {\n        this.router = router;\n        config.map(routes);\n    }\n\n    toggleNavigationMenu() {\n        this.showNavigationMenu = !this.showNavigationMenu;\n    }\n}\n\n\nexport class CategoriesValueConverter {\n    toView(navModels) {\n        let categories = new Map();\n\n        for (let model of navModels) {\n            let routes = categories.get(model.settings.category);\n\n            if (!routes) {\n                categories.set(model.settings.category, routes = []);\n            }\n\n            routes.push(model);\n        }\n\n        return categories;\n    }\n}\n","export default {\n    debug: true,\n    testing: true\n};\n","export class Home {\n\n}","import { Aurelia } from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n    warnings: {\n        wForgottenReturn: false\n    }\n});\n\nexport function configure(aurelia: Aurelia) {\n    aurelia.use\n        .standardConfiguration()\n        .feature('resources')\n        .plugin('aurelia-ux');\n\n    if (environment.debug) {\n        aurelia.use.developmentLogging();\n    }\n\n    if (environment.testing) {\n        aurelia.use.plugin('aurelia-testing');\n    }\n\n    aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export class Todo {\n\n}\n"],"sourceRoot":"../src"}